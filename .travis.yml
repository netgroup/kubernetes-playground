---
dist: bionic
env:
  global:
    - VAGRANT_DEFAULT_PROVIDER=libvirt
    - VAGRANT_VERSION="2.2.9"
    - BASE_BOX_VAGRANT_VM_ID="base-box-builder.k8s-play.local"
    - MASTER_1_VAGRANT_VM_ID="k8s-master-1.k8s-play.local"
    - WORKER_1_VAGRANT_VM_ID="k8s-minion-1.k8s-play.local"
    - WORKER_2_VAGRANT_VM_ID="k8s-minion-2.k8s-play.local"
jobs:
  fast_finish: true
  include:
    - name: "Linting"
      stage: linting-and-docker
      cache:
        directories:
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
      language: shell
      script: |
        scripts/linux/ci/lint.sh || exit 1;
    - name: "Lint InSpec profiles"
      cache:
        directories:
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
      install:
        - scripts/linux/ci/install-linting-tools.sh
      language: shell
      script: |
        scripts/linux/ci/lint-inspec.sh || exit 1;
    - name: "Build Docker images"
      cache:
        directories:
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
      language: shell
      script: |
        scripts/linux/ci/build-docker-images.sh || exit 1;
    - name: "Build the base box and start the cluster"
      stage: vagrant-base-box-up
      language: ruby
      cache:
        directories:
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
      install:
        - sudo scripts/linux/ci/install-dependencies.sh
        - scripts/linux/ci/install-linting-tools.sh
        - sudo scripts/linux/ci/install-libvirt.sh
        - sudo scripts/linux/ci/install-vagrant.sh
        - sudo scripts/linux/ci/install-vagrant-plugins.sh
        - sudo scripts/linux/ci/generate-env-for-travis.sh
        # Fix permissions after installing vagrant plugins with sudo
        - sudo chown -R "$(id -un)":"$(id -un)" $HOME/.vagrant.d
        # This doesn't have effect if you don't open a new shell
        - sudo adduser "$(id -un)" libvirt
        - sudo adduser "$(id -un)" kvm
        # Workaround for https://github.com/hashicorp/vagrant/issues/8279
        - chmod a+rx $HOME
      # Run with sudo because the libvirt socket is owned by the libvirt group,
      # and the current user was added to the group in the current session,
      # so the membership to that group is not yet in effect.
      # Set the PATH to make the installed gems accessible.
      script: |
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up "$BASE_BOX_VAGRANT_VM_ID" --no-destroy-on-error;
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        scripts/linux/ci/run-inspec-against-host.sh "$BASE_BOX_VAGRANT_VM_ID";
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant halt "$BASE_BOX_VAGRANT_VM_ID";
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        VAGRANT_LIBVIRT_VIRT_SYSPREP_OPERATIONS="defaults,-ssh-userdir,-ssh-hostkeys,-lvm-uuids" \
        vagrant package "$BASE_BOX_VAGRANT_VM_ID" --output kubernetes-playground-base.box;
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant box add --force kubernetes-playground-base.box --name ferrarimarco/kubernetes-playground-node;
        travis_wait time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up --no-destroy-on-error;
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant destroy --force
language: shell
os: linux
services:
  - docker
